generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  GUEST
}

enum AnimalSpecies {
  KISSA
  KOIRA
  HEVONEN
}

enum Sex {
  MALE
  FEMALE
  OTHER
  BLANK
}

model User {
  id Int @id @default(autoincrement())
  randomId String @unique @default(cuid())
  email String @unique
  cryptedPassword String
  role Role @default(USER)
  isLogged Boolean @default(false)
  profile Profile?
  pets Pet[]
  // Date & Time Logging //
  userCreatedAt DateTime @default(now())
  userUpdatedAt DateTime @updatedAt
  lastLogin DateTime?
  lastLogout DateTime?
}

model Profile {
  id Int @id @default(autoincrement())
  userId String @unique
  user User @relation(fields: [userId], references: [randomId])
  firstName String?
  lastName String?
  age String?
  sex Sex?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id Int @id @default(autoincrement())
  referenceKey String @unique @default(cuid())
  species AnimalSpecies
  owner User @relation(fields: [ownerId], references: [randomId])
  ownerId String
  name String @unique
  age String?
  cat Cat?
  dog Dog?
  horse Horse?
}

model Cat {
  id Int @id @default(autoincrement())
  microchipSerialCode String? @unique // the actual microship #
  catReference String @unique @default(cuid())
  pet Pet @relation(fields: [catReference], references: [referenceKey])
  pettyNames String[]
  catSubSpecies String?
  colorOfHair String?
  hair String?
  personality String?
  images String[]
  healthCheck String?
  vacciness Vaccine[]
  bio String?
}

model Dog {
  id Int @id @default(autoincrement())
  microchipSerialCode String? @unique // the actual microship #
  dogReference String @unique @default(cuid())
  pet Pet @relation(fields: [dogReference], references: [referenceKey])
  pettyNames String[]
  dogSubSpecies String?
  colorOfHair String?
  hair String?
  personality String?
  images String[]
  healthCheck String?
  vacciness Vaccine[]
  bio String?
}

model Horse {
  id Int @id @default(autoincrement())
  microchipSerialCode String? @unique // the actual microship #
  horseReference String @unique @default(cuid())
  pet Pet @relation(fields: [horseReference], references: [referenceKey])
  pettyNames String[]
  horseSubSpecies String?
  colorOfHair String?
  hair String?
  personality String?
  images String[]
  healthCheck String?
  vacciness Vaccine[]
  bio String?
}
model Vaccine {
  identifierNumber String @id @default(cuid())
  vaccineName String?
  vaccinatedName String
  vaccinatedIdentifier String
  vaccinatedAnimal AnimalSpecies
  vaccinatedWeightAtTimeOfInjection DateTime?
  vaccinePrice String?
  vaccineType String?
  vaccineManufacturer String?
  vaccineBatch String?
  vaccineDate DateTime?
  vaccineResponse String?
  sideEffects String?
  sideEffectScale Int @default(0)
  cat Cat? @relation(fields: [vaccinatedIdentifier], references: [catReference], map: "Vaccine_vaccinatedIdentifier_cat_fkey")
  dog Dog? @relation(fields: [vaccinatedIdentifier], references: [dogReference], map: "Vaccine_vaccinatedIdentifier_dog_fkey")
  horse Horse? @relation(fields: [vaccinatedIdentifier], references: [horseReference], map: "Vaccine_vaccinatedIdentifier_horse_fkey")
}
