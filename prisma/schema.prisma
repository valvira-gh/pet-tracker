generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rooli {
  ADMIN
  USER
  GUEST
}

enum ElainLaji {
  KISSA
  KOIRA
  HEVONEN
}

enum Sukupuoli {
  MIES
  NAINEN
  MUU
  EN_HALUA_VASTATA
}

model Kayttaja {
  tunniste Int @id @default(autoincrement())
  satunnaisTunniste String @unique @default(cuid())
  email String @unique
  salasana String
  rooli Rooli @default(USER)
  onKirjautunut Boolean @default(false)
  profiili Profiili?
  lemmikit Lemmikki[]
  kayttajaLuotu DateTime @default(now())
  kayttajaPaivitetty DateTime @updatedAt
  kunViimeksiSisaankirjautui DateTime?
  kunViimeksiUloskirjautui DateTime?
}

model Profiili {
  tunnisteNro Int @id @default(autoincrement())
  kayttajaTunniste String @unique
  kayttaja Kayttaja @relation(fields: [kayttajaTunniste], references: [satunnaisTunniste])
  etunimi String?
  sukunimi String?
  ika Int?
  sukupuoli Sukupuoli?
  luomisLeima DateTime @default(now())
  muutosLeima DateTime @updatedAt
}

model Lemmikki {
  tunnisteNro Int @id @default(autoincrement())
  referenssiAvain String @unique @default(cuid())
  laji ElainLaji
  kayttajaTunniste Int
  kayttaja Kayttaja @relation(fields: [kayttajaTunniste], references: [tunniste])
  nimi String @unique
  ika String?
  paino String?
  kissa Kissa?
  koira Koira?
  hevonen Hevonen?
}

model Kissa {
  kissaNro Int @id @default(autoincrement())
  siruNro String? @unique
  kissanReferenssi String @unique @default(cuid())
  lemmikki Lemmikki @relation(fields: [kissanReferenssi], references: [referenssiAvain])
  lempinimet String[]
  rotu String?
  vari String?
  turkki String?
  luonne String?
  rokotukset String?
  kuvat String[]
  vointiNyt String?
  rokotteet Rokote[]
  bio String?
}

model Koira {
  koiraNro Int @id @default(autoincrement())
  siruNro String? @unique
  referenssiTunniste String @unique @default(cuid())
  lemmikki Lemmikki @relation(fields: [referenssiTunniste], references: [referenssiAvain])
  lempinimet String[]
  rotu String?
  vari String?
  turkki String?
  luonne String?
  rokotukset String?
  kuvat String[]
  vointiNyt String?
  rokotteet Rokote[]
  bio String?
}

model Hevonen {
  hevonenNro Int @id @default(autoincrement())
  siruNro String? @unique
  referenssiTunniste String @unique @default(cuid())
  lemmikki Lemmikki @relation(fields: [referenssiTunniste], references: [referenssiAvain])
  lempinimet String[]
  rotu String?
  vari String?
  turkki String?
  luonne String?
  rokotukset String?
  kuvat String[]
  vointiNyt String?
  rokotteet Rokote[]
  elamankaari String?
}

model Rokote {
  tunnisteNro String @id @default(cuid())
  rokotteenNimi String?
  rokotettavanNimi String
  rokotettavanTunniste Int
  rokotettavaElain ElainLaji
  rokotettavanPainoPistopvm DateTime?
  rokotteenHinta String?
  rokotteenTyyppi String?
  rokotteenValmistaja String?
  rokotteenEra String?
  rokotteenPvm DateTime?
  rokoteVaste String?
  haittavaikutukset String?
  haittaSkaala Int @default(0)
  kissa Kissa? @relation(fields: [rokotettavanTunniste], references: [kissaNro], map: "Rokote_rokotettavanTunniste_kissa_fkey")
  koira Koira? @relation(fields: [rokotettavanTunniste], references: [koiraNro], map: "Rokote_rokotettavanTunniste_koira_fkey")
  hevonen Hevonen? @relation(fields: [rokotettavanTunniste], references: [hevonenNro], map: "Rokote_rokotettavanTunniste_hevonen_fkey")
}
